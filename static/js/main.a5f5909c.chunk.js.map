{"version":3,"sources":["img/notImage.png","Profile/Profile.js","Statistics/Statistics.js","FriendList/FriendList.js","Transactions/TransactionHistory.js","App.js","randomColors.js","index.js"],"names":["Bio","avatar","name","tag","location","className","src","alt","defaultProps","imagePlaceholder","Stats","stats","followers","views","likes","Profile","StatsItem","fileType","percentage","data","map","stat","label","id","Statistics","title","FriendListItem","isOnline","width","FriendList","friends","friend","index","Transaction","type","amount","currency","TransactionsHisory","transaction","App","user","statsData","friendList","transactions","random","Math","floor","ReactDOM","render","StrictMode","document","getElementById","querySelectorAll","forEach","item","arr","style","background","length"],"mappings":"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","file":"static/js/main.a5f5909c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notImage.0e049a38.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport imagePlaceholder from \"../img/notImage.png\";\r\n\r\nconst Bio = ({ avatar, name, tag, location }) => (\r\n  <div className=\"description\">\r\n    <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n    <p className=\"name\">{name}</p>\r\n    <p className=\"tag\">@{tag}</p>\r\n    <p className=\"location\">{location}</p>\r\n  </div>\r\n);\r\n\r\nBio.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n};\r\nBio.defaultProps = {\r\n  avatar: imagePlaceholder,\r\n};\r\n\r\nconst Stats = ({ stats }) => (\r\n  <ul className=\"stats\">\r\n    <li>\r\n      <span className=\"label\">Followers</span>\r\n      <span className=\"quantity\">{stats.followers}</span>\r\n    </li>\r\n    <li>\r\n      <span className=\"label\">Views</span>\r\n      <span className=\"quantity\">{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span className=\"label\">Likes</span>\r\n      <span className=\"quantity\">{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className=\"profile\">\r\n    <Bio name={name} tag={tag} location={location} avatar={avatar} />\r\n    <Stats stats={stats} />\r\n  </div>\r\n);\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatsItem = ({ fileType, percentage }) => (\r\n  <li className=\"item\">\r\n    <span className=\"label\">{fileType}</span>\r\n    <span className=\"percentage\">{percentage}%</span>\r\n  </li>\r\n);\r\n\r\nStatsItem.propTypes = {\r\n  fileType: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Stats = ({ data }) => (\r\n  <ul className=\"stat-list\">\r\n    {data.map((stat) => (\r\n      <StatsItem\r\n        key={stat.id}\r\n        fileType={stat.label}\r\n        percentage={stat.percentage}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst Statistics = ({ title, data }) => (\r\n  <section className=\"statistics\">\r\n    <h2 className=\"title\">{title}</h2>\r\n    <Stats data={data} />\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.array.isRequired,\r\n};\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => (\r\n  <li className=\"item\">\r\n    <span className={isOnline ? \"status online\" : \"status\"}></span>\r\n    <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n    <p className=\"name\">{name}</p>\r\n  </li>\r\n);\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool,\r\n};\r\nFriendListItem.defaultProps = {\r\n  isOnline: false,\r\n};\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map((friend, index) => (\r\n      <FriendListItem key={index} {...friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Transaction = ({ type, amount, currency }) => (\r\n  <tr>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </tr>\r\n);\r\nTransaction.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nconst TransactionsHisory = ({ data }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {data.map((transaction) => (\r\n        <Transaction key={transaction.id} {...transaction} />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionsHisory.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionsHisory;\r\n","import Profile from \"./Profile/Profile\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport user from \"./datae/user.json\";\r\nimport statsData from \"./datae/statistical-data.json\";\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport friendList from \"./datae/friends\";\r\nimport TransactionsHisory from \"./Transactions/TransactionHistory\";\r\nimport transactions from \"./datae/transactions.json\";\r\n\r\nconst App = () => (\r\n  <div className=\"container\">\r\n    <Profile {...user} />\r\n    <Statistics title={\"Your Filetypes Stats\"} data={statsData} />\r\n    <FriendList friends={friendList} />\r\n    <TransactionsHisory data={transactions} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const random = () => Math.floor(255 * Math.random());\r\n\r\nexport default function randomizeBgColor() {\r\n  return `rgb(${random()}, ${random()}, ${random()})`;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport randomizeBgColor from \"./randomColors\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nconst statItems = document.querySelectorAll(\".stat-list .item\");\n\nstatItems.forEach((item, index, arr) => {\n  item.style.background = randomizeBgColor();\n  item.style.width = `calc(100% / ${arr.length})`;\n});\n"],"sourceRoot":""}